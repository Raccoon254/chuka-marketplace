generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id               Int          @id @default(autoincrement())
  email            String       @unique
  emailVerified    Boolean      @default(false)
  password         String
  name             String
  role             UserRole     @default(USER)
  image            String?
  resetToken       String?
  resetTokenExpiry DateTime?
  createdAt        DateTime     @default(now())
  updatedAt        DateTime     @updatedAt
  items            Item[]
  rating           UserRating[]
  actions          UserAction[]
}

model Item {
  id          Int        @id @default(autoincrement())
  title       String
  description String
  verified    Boolean
  price       Float
  location    String
  contact     String
  images      String[]
  sellerId    Int
  seller      User       @relation(fields: [sellerId], references: [id])
  categoryId  Int
  category    Category   @relation(fields: [categoryId], references: [id])
  status      ItemStatus @default(AVAILABLE)
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
}

model Category {
  id    Int    @id @default(autoincrement())
  name  String @unique
  items Item[]
}

model UserAction {
  id          Int      @id @default(autoincrement())
  userId      Int
  description String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  user User @relation(fields: [userId], references: [id])
}

model UserRating {
  id          Int      @id @default(autoincrement())
  userId      Int
  creatorId   Int
  rating      Int
  description String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  user User @relation(fields: [userId], references: [id])
}

enum UserRole {
  USER
  ADMIN
}

enum ItemStatus {
  AVAILABLE
  SOLD
  RESERVED
}
